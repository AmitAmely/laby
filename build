#!/bin/sh

DIR=$(dirname $0)
cd ${DIR}

source project.conf
source build.conf

export PROJECT_NAME
export PROJECT_VERSION
export OCAML_VERSION=$(ocamlc -version)
export PKG_VERSION="${OCAMLFIND} query -format %v"

OCB="${OCAMLBUILD} -use-menhir -no-links -no-sanitize -no-hygiene"
OFQ="${OCAMLFIND} query -r -format -I,%d"

DIRS=$(${OFQ} ${PACKAGES})
CFLAGS=""; for i in ${DIRS}; do CFLAGS="${CFLAGS} -cflags $i"; done;
LFLAGS=""; for i in ${DIRS}; do LFLAGS="${LFLAGS} -lflags $i"; done;

LIBFLAGS=""; for i in ${DEPLIBS}; do LIBFLAGS="${LIBFLAGS} -lib $i"; done;

OCBF="${OCB} ${CFLAGS} ${LFLAGS} ${LIBFLAGS} -I src"

ACT="${1---all}";
shift;
[ $# == 0 ] && set ${BINS} ${LIBS}

BINTARGETS=""
LIBTARGETS=""
for i in $*; do
  for k in ${BINS}; do
    [ "$k" == "$i" ] && BINTARGETS="${BINTARGETS} $i"
  done;
  for k in ${LIBS}; do
    [ "$k" == "$i" ] && LIBTARGETS="${LIBTARGETS} $i"
  done;
done

case ${ACT} in
  --help|-h)
      echo "usage: $0 action [targets]"
      echo "options:"
      echo "  --all (-a)"
      echo "  --byte (-b)"
      echo "  --native (-n)"
      echo "  --byte-debug (-bd)"
      echo "  --native-profile (-np)"
      echo "  --clean (-c)"
      exit 0;;
  --clean|-c)
      ${OCAMLBUILD} -clean
      rm -rf src/config.ml
      for i in ${BINTARGETS}; do
        rm -rf $i $i.{byte,native,d.byte,p.native};
      done
      for i in ${LIBTARGETS}; do
	rm -rf $i.{cma,cmxa,.d.cma,p.cmxa};
      done
      exit 0;;
  --target|-t)
      ${OCBF} $*
      exit 0;;
  --all|-a) LNK="native"; BINEXT="native byte"; LIBEXT="cmxa cma";;
  --byte|-b) LNK="byte"; BINEXT="byte"; LIBEXT="cma";;
  --byte-debug|-bd) LNK="d.byte"; BINEXT="d.byte"; LIBEXT="d.cma";;
  --native|-n) LNK="native"; BINEXT="native"; LIBEXT="cmxa";;
  --native-profile|-np) LNK="p.native"; BINEXT="p.native"; LIBEXT="p.cmxa";;
  *) echo "unknown action"; exit 1;;
esac

TARGETS=""
for i in ${BINTARGETS}; do
  for j in ${BINEXT}; do TARGETS="${TARGETS} src/$i.$j"; done;
done;
for i in ${LIBTARGETS}; do
  for j in ${LIBEXT}; do TARGETS="${TARGETS} src/$i.$j"; done;
done;

FILES="${BINTARGETS} ${LIBTARGETS}"
echo building "${PROJECT_NAME}-${PROJECT_VERSION}:" ${FILES}
rm -f src/config.ml && sh src/config.sh > src/config.ml

for i in ${TARGETS}; do rm -f $(basename "$i"); done

${OCBF} ${TARGETS} ${AUXTARGETS} || exit 1

for i in ${TARGETS}; do cp "_build/$i" $(basename "$i"); done

[ -n ${LNK} ] &&
for i in ${BINTARGETS}; do ln -sf $i.${LNK} $i; done

exit 0


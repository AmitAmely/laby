#!/bin/bash

cd $(dirname $0)

[ -f project.conf ] && source project.conf
source build.conf || exit 1

export PREFIX=${PREFIX-/usr}
export SYSDATADIR=${SYSDATADIR-${PREFIX}/share}
export SYSTMPDIR=${SYSTMPDIR-/tmp}

export PROJECT_NAME=${PROJECT_NAME-unknown}
export PROJECT_VERSION=${PROJECT_VERSION-unknown}

export OCAMLC=${OCAMLC-ocamlc}
export OCAMLOPT=${OCAMLOPT-ocamlopt}
export OCAMLFIND=${OCAMLFIND-ocamlfind}
export OCAMLBUILD=${OCAMLBUILD-ocamlbuild}

export OCAML_VERSION=$(${OCAMLC} -version)
[ -n "${OCAML_VERSION}" ] || \
  { echo "compilation requires ocaml compilers"; exit 1; }

ocaml_config () {
  ${OCAMLC} -config | sed -n 's/^'"$1"': //p' | tr -c -d '[:alnum:]'
}

export OCAML_SYSTEM=$(ocaml_config system)
export OCAML_ARCH=$(ocaml_config architecture)

export PKG_VERSION="${OCAMLFIND} query -format %v"

SYSARCH="${OCAML_SYSTEM}-${OCAML_ARCH}"
BUILDDIR="_build-${SYSARCH}"

OCB="${OCAMLBUILD} -no-links -no-sanitize -no-hygiene -ocamlc ocamlc -ocamlopt ocamlopt -build-dir ${BUILDDIR}"
OFQ="${OCAMLFIND} query -r -format -I,%d"

[ "${THREADS}" = "yes" ] && OCBF="${OCBF} -lflags -thread -cflags -thread"
[ "${DEBUG}" = "yes" ] && OCBF="${OCBF} -tag debug"
[ -n "${JOBS}" ] && OCBF="${OCBF} -j ${JOBS}"

DIRS=$(${OFQ} ${PACKAGES})
for i in ${DIRS}; do OCBF="${OCBF} -cflags $i -lflags $i"; done
for i in ${DEPLIBS}; do OCBF="${OCBF} -lib $i"; done
for i in ${SRCDIRS}; do OCBF="${OCBF} -I $i"; done

OCBI="${OCB} ${OCBF}"

ACT="${1---all}"
shift
[ $# == 0 ] && set ${BINS} ${LIBS}

BINTARGETS=""
LIBTARGETS=""
for i in $*; do
  for k in ${BINS}; do
    [ "$k" == "$i" ] && BINTARGETS="${BINTARGETS} $i"
  done
  for k in ${LIBS}; do
    [ "$k" == "$i" ] && LIBTARGETS="${LIBTARGETS} $i"
  done
done

tclean () {
      for i in ${AUXTARGETS}; do
        rm -rf $i
      done
      for i in ${BINTARGETS}; do
	  rm -rf "$i"
	  for j in byte native d.byte p.native ${BINEXT}
	  do rm -rf "$i-${SYSARCH}.$j"; done
      done
      for i in ${LIBTARGETS}; do
	  for j in cma cmxa d.cma p.cmxa
          do rm -rf "$i-${SYSARCH}.$j"; done
      done
}

case ${ACT} in
  --help|-h)
      echo "usage: $0 action [targets]"
      echo "options:"
      echo "  --all (-a)"
      echo "  --byte (-b)"
      echo "  --native (-n)"
      echo "  --byte-debug (-bd)"
      echo "  --native-profile (-np)"
      echo "  --clean (-c)"
      exit 0;;
  --clean|-c)
      ${OCBI} -clean
      [ -f "${CONF}.sh" ] && rm -rf "${CONF}.ml"
      tclean
      exit 0;;
  --target|-t)
      ${OCBI} $*
      exit 0;;
  --all|-a) LNK="native"; BINEXT="native byte"; LIBEXT="cmxa cma";;
  --byte|-b) LNK="byte"; BINEXT="byte"; LIBEXT="cma";;
  --byte-debug|-bd) LNK="d.byte"; BINEXT="d.byte"; LIBEXT="d.cma";;
  --native|-n) LNK="native"; BINEXT="native"; LIBEXT="cmxa";;
  --native-profile|-np) LNK="p.native"; BINEXT="p.native"; LIBEXT="p.cmxa";;
  *) echo "unknown action"; exit 1;;
esac

TARGETS=""

for i in ${BINTARGETS}; do
  for j in ${BINEXT}; do TARGETS="${TARGETS} ${DIR}/$i.$j"; done
done
for i in ${LIBTARGETS}; do
  for j in ${LIBEXT}; do TARGETS="${TARGETS} ${DIR}/$i.$j"; done
done

FILES="${BINTARGETS} ${LIBTARGETS}"
echo building "${PROJECT_NAME}-${PROJECT_VERSION} for ${SYSARCH}:" ${FILES}
export THREADS
[ -f "${CONF}.sh" ] && sh "${CONF}.sh" > "${CONF}.ml"

tclean

${OCBI} ${TARGETS} ${AUXTARGETS} || exit 1

for i in ${BINTARGETS}; do
  for j in ${BINEXT}
  do cp "${BUILDDIR}/${DIR}/$i.$j" "$i-${SYSARCH}.$j"; done
done
for i in ${LIBTARGETS}; do
  for j in ${LIBEXT}
  do cp "${BUILDDIR}/${DIR}/$i.$j" "$i-${SYSARCH}.$j"; done
done

# linking

[ -n ${LNK} ] &&
for i in ${BINTARGETS}; do ln -sf "$i-${SYSARCH}.${LNK}" "$i"; done

for i in ${LIBTARGETS}; do
  for j in ${LIBEXT}; do ln -sf "$i-${SYSARCH}.$j" "$i.$j"; done
done

exit 0

